<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<artifactId>org.nightlabs.eclipse.compatibility.rcp</artifactId>
	<packaging>jar</packaging>

	<parent>
		<groupId>org.nightlabs.eclipse</groupId>
		<artifactId>org.nightlabs.eclipse.parent</artifactId>
		<version>1.3.0</version>
		<relativePath>../org.nightlabs.eclipse.parent</relativePath>
	</parent>

	<dependencies>
		<dependency>
			<!-- Static dependency onto the RCP stuff, because we always need to build this project against RCP - it is specific.
			Which SWT implementation (Windows, Linux, Mac + 32 or 64 bit) should not matter and we now use this one everywhere
			where we need the dependency. These are not many locations anyway, because 1st this dependency would be forwarded
			as a maven transitive dependency and 2nd we build everything against RAP anyway (rather than against the RCP).
			Marco :-) -->
			<groupId>org.eclipse.swt</groupId>
			<artifactId>org.eclipse.swt.gtk.linux.x86_64</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.core</groupId>
			<artifactId>org.eclipse.core.resources</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.core</groupId>
			<artifactId>org.eclipse.core.runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.ui</groupId>
			<artifactId>org.eclipse.ui</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jface</groupId>
			<artifactId>org.eclipse.jface</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.ui</groupId>
			<artifactId>org.eclipse.ui.forms</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.ui</groupId>
			<artifactId>org.eclipse.ui.views</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.update</groupId>
			<artifactId>org.eclipse.update.ui</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.update</groupId>
			<artifactId>org.eclipse.update.configurator</artifactId>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<outputDirectory>bin</outputDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<archive>
						<manifestFile>META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>	
<!-- 
	<build>
		<sourceDirectory>src</sourceDirectory>
		<outputDirectory>bin</outputDirectory>
		<resources>
			<resource>
				<directory>src</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<inherited>false</inherited>
				<configuration>
					<instructions>
 -->
						<!-- the provide:=true instruction results in having Import-Package 
							with version range e.g. "[1.2,1.3)" instead of "[1.2,2)" which is the default. 
							Applies to all org.nightlabs packages. See http://www.aqute.biz/Bnd/Versioning -->
						<!-- <Import-Package>org.nightlabs.*;provide:=true,*</Import-Package> -->
<!-- 
						<Bundle-SymbolicName>org.nightlabs.eclipse.compatibility</Bundle-SymbolicName>
						<Export-Package>
						org.eclipse.core.resources;version="${project.version}";-split-package:=first,
						org.eclipse.swt.accessibility;version="${project.version}";-split-package:=first,
						org.eclipse.ui;version="${project.version}";-split-package:=first,
						org.nightlabs.base.ui.util;version="${project.version}";-split-package:=first,
						org.nightlabs.eclipse.compatibility;version="${project.version}";-split-package:=first
						</Export-Package>
						<Private-Package>${bundle.namespace}.internal.*</Private-Package>
						<Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
 -->						
</project>